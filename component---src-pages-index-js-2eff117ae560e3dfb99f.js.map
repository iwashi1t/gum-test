{"version":3,"file":"component---src-pages-index-js-2eff117ae560e3dfb99f.js","mappings":"kKAAA,EAAe,IAA0B,mDCAzC,EAAe,IAA0B,sDCyHzC,EA/GkB,WAChB,IAAMA,GAAQC,EAAAA,EAAAA,UACRC,GAASD,EAAAA,EAAAA,UAEf,GAAwBE,EAAAA,EAAAA,YAElBC,GAFN,UAEkB,WAChBJ,EAAMK,QAAQC,QAEd,IAAMC,EAAUL,EAAOG,QAAQG,WAAW,MAEpCC,EAAaC,OAAOC,iBAAiBX,EAAMK,SAC3CO,EAAiBC,WAAWJ,EAAWK,OACvCC,EAAkBF,WAAWJ,EAAWO,QAC9CC,QAAQC,IAAR,uBAAmCN,EAAnC,WAA4DG,GAM5D,MAAoCf,EAAMK,QAAlCc,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YACpBH,QAAQC,IAAR,mBAA+BC,EAA/B,WAAoDC,GAEpD,IAAMC,EAAeD,EAAcD,EAAeJ,EAAkBH,EAC/DO,EAAaP,EACbQ,EAAcL,EAKbO,EAHiBV,EAGIS,EACrBE,EAjCUC,mBA6BOZ,EAIKS,EACtBI,GAAKN,EAAaG,GAAK,EACvBI,GAAKN,EAAcG,GAAK,EAE9BN,QAAQC,IAAR,mBAA+BO,EAA/B,MAAsCC,EAAtC,MAA6CJ,EAA7C,MAAoDC,GACpDhB,EAAQoB,UAAU3B,EAAMK,QAASoB,EAAGC,EAAGJ,EAAGC,EAAG,EAAG,EAvChC,IADC,KA0CjBrB,EAAOG,QAAQuB,QAAO,SAAAC,GACpBZ,QAAQC,IAAR,WAAwBW,QAmB5B,OAfAC,EAAAA,EAAAA,YAAU,WACRC,UAAUC,aAAaC,aAAa,CAClCjC,OAAO,EACPkC,OAAO,IAENC,MAAK,SAAAC,GACJpC,EAAMK,QAAQgC,UAAYD,EAE1BE,WAAWlC,EAAW,QAEvBmC,OAAM,SAAAC,GACLvB,QAAQwB,MAAMD,QAEjB,IAGD,2BACE,yBACEE,IAAK,SAAAA,GAAG,OAAI1C,EAAMK,QAAUqC,GAC5BC,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNhC,MAAO,OACPE,OAAQ,OACR+B,QAAS,QACTC,UAAW,SAEbC,UAAQ,EACRC,aAAW,EACXC,OAAK,EACLC,OAAQC,EAGRC,iBAAkB,WAChBrC,QAAQC,IAAR,cAA0BlB,EAAMK,QAAQe,YAAxC,UAA6DpB,EAAMK,QAAQc,eAG/E,0BACEuB,IAAK,SAAAA,GAAG,OAAIxC,EAAOG,QAAUqC,GAC7BC,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNhC,MAAO,OACPE,OAAQ,OACR+B,QAAS,QACTC,UAAW,WAEblC,MA/FY,IAgGZE,OAjGa,MAmGf,uBACEuC,IAAKC,EACLb,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNhC,MAAO,OACPE,OAAQ,OACR+B,QAAS,QACTC,UAAW","sources":["webpack://gum-test/./src/images/test.png","webpack://gum-test/./src/images/img10-f.png","webpack://gum-test/./src/pages/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/test-f8a27158c0bc147a46bd66e7f35c1a3a.png\";","export default __webpack_public_path__ + \"static/img10-f-651f5d532c0dcd9c7764a17e17895bcd.png\";","import React, { useEffect, useRef, useState } from \"react\"\n\nimport './styles.scss'\nimport testImage from '../images/test.png'\nimport frameImage from '../images/img10-f.png'\n\nconst FRAME_HEIGHT = 640\nconst FRAME_WIDTH = 480\nconst frameAspect = FRAME_HEIGHT / FRAME_WIDTH\n\nconst IndexPage = () => {\n  const video = useRef()\n  const canvas = useRef()\n\n  const [href, setHref] = useState()\n\n  const takePhoto = () => {\n    video.current.pause()\n\n    const context = canvas.current.getContext('2d')\n\n    const videoStyle = window.getComputedStyle(video.current)\n    const videoViewWidth = parseFloat(videoStyle.width)\n    const videoViewHeight = parseFloat(videoStyle.height)\n    console.log(`*** videoView width=${videoViewWidth} height=${videoViewHeight}`)\n    // const canvasStyle = window.getComputedStyle(canvas.current)\n    // console.log(`*** canvas width=${canvasStyle.width} height=${canvasStyle.height}`)\n    // const frameStyle = window.getComputedStyle(frame.current)\n    // console.log(`*** frame width=${frameStyle.width} height=${frameStyle.height}`)\n\n    const { videoWidth, videoHeight } = video.current\n    console.log(`*** video width=${videoWidth} height=${videoHeight}`)\n\n    const videoRatio = ((videoHeight / videoWidth) > (videoViewHeight / videoViewWidth))\n      ? (videoWidth / videoViewWidth)\n      : (videoHeight / videoViewHeight)\n\n    const frameViewWidth = videoViewWidth\n    const frameViewHeight = frameViewWidth * frameAspect\n\n    const w = frameViewWidth * videoRatio\n    const h = frameViewHeight * videoRatio\n    const x = (videoWidth - w) / 2\n    const y = (videoHeight - h) / 2\n\n    console.log(`*** drawImage x=${x} y=${y} w=${w} h=${h}`)\n    context.drawImage(video.current, x, y, w, h, 0, 0, FRAME_WIDTH, FRAME_HEIGHT)\n\n    canvas.current.toBlob(blob => {\n      console.log(`*** blob`, blob)\n    })\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false\n    })\n      .then(stream => {\n        video.current.srcObject = stream\n\n        setTimeout(takePhoto, 3000)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }, [])\n\n  return (\n    <div>\n      <video\n        ref={ref => video.current = ref}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          display: 'block',\n          objectFit: 'cover'\n        }}\n        autoPlay\n        playsInline\n        muted\n        poster={testImage}\n        // width={IMAGE_WIDTH}\n        // height={IMAGE_HEIGHT}\n        onLoadedMetadata={() => {\n          console.log(`*** height=${video.current.videoHeight} width=${video.current.videoWidth}`)\n        }}\n      />\n      <canvas\n        ref={ref => canvas.current = ref}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          display: 'block',\n          objectFit: 'contain'\n        }}\n        width={FRAME_WIDTH}\n        height={FRAME_HEIGHT}\n      />\n      <img\n        src={frameImage}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          display: 'block',\n          objectFit: 'contain'\n        }}\n      />\n    </div>\n  )\n}\n\nexport default IndexPage\n"],"names":["video","useRef","canvas","useState","takePhoto","current","pause","context","getContext","videoStyle","window","getComputedStyle","videoViewWidth","parseFloat","width","videoViewHeight","height","console","log","videoWidth","videoHeight","videoRatio","w","h","FRAME_HEIGHT","x","y","drawImage","toBlob","blob","useEffect","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","setTimeout","catch","err","error","ref","style","position","top","left","display","objectFit","autoPlay","playsInline","muted","poster","testImage","onLoadedMetadata","src","frameImage"],"sourceRoot":""}