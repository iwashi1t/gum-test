{"version":3,"file":"component---src-pages-index-js-1711b2a05b7fd117f366.js","mappings":"iKAAA,EAAe,IAA0B,mDCKnCA,EAAe,IACfC,EAAc,IAqFpB,EAnFkB,WAChB,IAAMC,GAAQC,EAAAA,EAAAA,UACRC,GAASD,EAAAA,EAAAA,UAEf,GAAwBE,EAAAA,EAAAA,YAAxB,UA8BA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,UAAUC,aAAaC,aAAa,CAClCP,OAAO,EACPQ,OAAO,IAENC,MAAK,SAAAC,GACJV,EAAMW,QAAQC,UAAYF,KAI3BG,OAAM,SAAAC,GACLC,QAAQC,MAAMF,QAEjB,IAGD,2BACE,2BACE,yBACEG,IAAK,SAAAA,GAAG,OAAIjB,EAAMW,QAAUM,GAC5BC,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,QAAS,QACTC,UAAW,SAEbC,UAAQ,EACRC,aAAW,EACXC,OAAK,EACLC,OAAQC,EACRR,MAAOvB,EACPwB,OAAQzB,EACRiC,iBAAkB,WAChBhB,QAAQiB,IAAR,cAA0BhC,EAAMW,QAAQsB,YAAxC,UAA6DjC,EAAMW,QAAQuB,eAG/E,0BACEjB,IAAK,SAAAA,GAAG,OAAIf,EAAOS,QAAUM,GAC7BC,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,QAEVD,MAAOvB,EACPwB,OAAQzB","sources":["webpack://gum-test/./src/images/test.png","webpack://gum-test/./src/pages/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/test-f8a27158c0bc147a46bd66e7f35c1a3a.png\";","import React, { useEffect, useRef, useState } from \"react\"\n\nimport './styles.scss'\nimport testImage from '../images/test.png'\n\nconst IMAGE_HEIGHT = 640\nconst IMAGE_WIDTH = 480\n\nconst IndexPage = () => {\n  const video = useRef()\n  const canvas = useRef()\n\n  const [href, setHref] = useState()\n\n  const takePhoto = () => {\n    const context = canvas.current.getContext('2d')\n\n    context.fillStyle = 'black'\n    context.fillRect(0, 0, IMAGE_HEIGHT, IMAGE_WIDTH)\n\n    console.log(`*** drawImage width=${video.current.videoWidth} height=${video.current.videoHeight}`)\n    context.drawImage(video.current, 0, 0, video.current.videoWidth, video.current.videoHeight, 0, 0, IMAGE_WIDTH, IMAGE_HEIGHT)\n\n    canvas.current.toBlob(blob => {\n    })\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false\n    })\n      .then(stream => {\n        video.current.srcObject = stream\n\n        // setTimeout(takePhoto, 3000)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }, [])\n\n  return (\n    <div>\n      <div>\n        <video\n          ref={ref => video.current = ref}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            display: 'block',\n            objectFit: 'cover'\n          }}\n          autoPlay\n          playsInline\n          muted\n          poster={testImage}\n          width={IMAGE_WIDTH}\n          height={IMAGE_HEIGHT}\n          onLoadedMetadata={() => {\n            console.log(`*** height=${video.current.videoHeight} width=${video.current.videoWidth}`)\n          }}\n        />\n        <canvas\n          ref={ref => canvas.current = ref}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%'\n          }}\n          width={IMAGE_WIDTH}\n          height={IMAGE_HEIGHT}\n        />\n      </div>\n      {/* <div style={{\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'blue'\n      }}>\n      </div> */}\n    </div>\n  )\n}\n\nexport default IndexPage\n"],"names":["IMAGE_HEIGHT","IMAGE_WIDTH","video","useRef","canvas","useState","useEffect","navigator","mediaDevices","getUserMedia","audio","then","stream","current","srcObject","catch","err","console","error","ref","style","position","top","left","width","height","display","objectFit","autoPlay","playsInline","muted","poster","testImage","onLoadedMetadata","log","videoHeight","videoWidth"],"sourceRoot":""}